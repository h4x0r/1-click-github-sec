=== INSTALLATION SESSION START ===
Timestamp: 2025年 9月23日 星期二 22時40分48秒 HKT
Script: ./install-security-controls.sh 
PWD: /Users/4n6h4x0r/src/1-click-rust-sec
User: 4n6h4x0r
========================================
[2025-09-23 22:40:48] [INFO] [print_status] ════════════════════════════════════════════════
[2025-09-23 22:40:48] [INFO] [print_status]   Security Controls Installer v0.1.0
[2025-09-23 22:40:48] [INFO] [print_status] ════════════════════════════════════════════════
[2025-09-23 22:40:48] [INFO] [start_transaction] Transaction started: security-controls-install
[2025-09-23 22:40:48] [INFO] [main] === Security Controls Installation Started ===
[2025-09-23 22:40:48] [INFO] [main] Script version: 0.1.0
[2025-09-23 22:40:48] [INFO] [main] Arguments: --dry-run --no-github-security
[2025-09-23 22:40:48] [INFO] [print_status] 🔍 DRY RUN MODE - No changes will be made
[2025-09-23 22:40:48] [INFO] [print_status] ✅ Git repository detected
[2025-09-23 22:40:48] [INFO] [print_status] ✅ Rust project detected (Cargo.toml found)
[2025-09-23 22:40:48] [INFO] [print_status] ▶ Checking Required Tools
[2025-09-23 22:40:48] [INFO] [print_status] ✅ git: /opt/homebrew/bin/git
[2025-09-23 22:40:48] [INFO] [print_status] ✅ curl: /opt/anaconda3/bin/curl
[2025-09-23 22:40:48] [INFO] [print_status] ✅ jq: /opt/anaconda3/bin/jq
[2025-09-23 22:40:48] [INFO] [print_status] ✅ cargo: /Users/4n6h4x0r/.cargo/bin/cargo
[2025-09-23 22:40:48] [INFO] [print_status] ✅ rustc: /Users/4n6h4x0r/.cargo/bin/rustc
[2025-09-23 22:40:48] [INFO] [print_status] ▶ Installing Security Tools
[2025-09-23 22:40:48] [INFO] [print_status] ⚠️ RUSTUP_TOOLCHAIN is set to '1.87.0' — this overrides the default toolchain.
[2025-09-23 22:40:48] [INFO] [print_status]    Optional cargo installs may fail or use a non-default toolchain. Using 'cargo +stable' for installs.
[2025-09-23 22:40:48] [INFO] [print_status]    To avoid this, unset RUSTUP_TOOLCHAIN before running the installer.
[2025-09-23 22:40:48] [INFO] [print_status] ✅ cargo-deny already installed
[2025-09-23 22:40:48] [INFO] [print_status] ✅ cargo-geiger already installed
[2025-09-23 22:40:48] [INFO] [print_status] ✅ cargo-cyclonedx already installed
[2025-09-23 22:40:49] [INFO] [print_status] ✅ cargo-machete already installed
[2025-09-23 22:40:49] [INFO] [print_status] 🔄 Ensuring fallback security tools...
[2025-09-23 22:40:49] [INFO] [print_status] ▶ Installing Gitsign for Sigstore Signing
[2025-09-23 22:40:49] [INFO] [print_status] ✅ gitsign already installed
[2025-09-23 22:40:49] [INFO] [print_status] 🔧 Configuring gitsign for manual authentication...
[2025-09-23 22:40:49] [INFO] [print_status]    [DRY RUN] Would configure gitsign settings
[2025-09-23 22:40:49] [INFO] [print_status] ▶ Configuring Cargo.toml Security Settings
[2025-09-23 22:40:49] [INFO] [print_status] ✅ overflow-checks already configured in Cargo.toml
[2025-09-23 22:40:49] [INFO] [print_status] ✅ deny.toml already exists
[2025-09-23 22:40:49] [INFO] [print_status] 📝 Configuring secure .cargo/config.toml...
[2025-09-23 22:40:49] [INFO] [print_status]    [DRY RUN] Would create secure .cargo/config.toml
[2025-09-23 22:40:49] [INFO] [print_status] ▶ Installing Default Security Configuration
[2025-09-23 22:40:49] [INFO] [print_status] [DRY RUN] Would create .security-controls with config and gitleaks config
[2025-09-23 22:40:49] [INFO] [print_status] ▶ Installing script-only pinactlite helper
[2025-09-23 22:40:49] [INFO] [print_status] [DRY RUN] Would copy pinactlite to .security-controls/bin/pinactlite
[2025-09-23 22:40:49] [INFO] [print_status] ▶ Installing script-only gitleakslite helper
[2025-09-23 22:40:49] [INFO] [print_status] [DRY RUN] Would copy gitleakslite to .security-controls/bin/gitleakslite
[2025-09-23 22:40:49] [INFO] [print_status] ▶ Installing Pre-Push Hook
[2025-09-23 22:40:49] [INFO] [print_status] ⚠️  Pre-push hook already exists
[2025-09-23 22:40:49] [INFO] [print_status] 📝 Skipping pre-push hook installation
[2025-09-23 22:40:49] [INFO] [print_status] ▶ Installing CI Workflow
[2025-09-23 22:40:49] [INFO] [print_status] [DRY RUN] Would install CI workflow to .github/workflows/security.yml
[2025-09-23 22:40:49] [INFO] [print_status] [DRY RUN] Would install Pinning Validation workflow to .github/workflows/pinning-validation.yml
[2025-09-23 22:40:49] [INFO] [print_status] ▶ Installing Security Documentation
[2025-09-23 22:40:49] [INFO] [print_status] [DRY RUN] Would install README to docs/security/README.md
[2025-09-23 22:40:49] [INFO] [print_status] [DRY RUN] Would install architecture documentation to docs/security/ARCHITECTURE.md
[2025-09-23 22:40:49] [INFO] [print_status] [DRY RUN] Would install YubiKey guide to docs/security/YUBIKEY_SIGSTORE_GUIDE.md
[2025-09-23 22:40:49] [INFO] [print_status] ════════════════════════════════════════════════
[2025-09-23 22:40:49] [INFO] [print_status]   Dry Run Complete
[2025-09-23 22:40:49] [INFO] [print_status] ════════════════════════════════════════════════
[2025-09-23 22:40:49] [INFO] [print_status] 🔍 Preview complete - no changes made
[2025-09-23 22:40:49] [INFO] [print_status]    Run without --dry-run to install
[2025-09-23 22:40:49] [INFO] [commit_transaction] Transaction committed successfully
[2025-09-23 22:40:49] [INFO] [main] === Installation Completed Successfully ===
